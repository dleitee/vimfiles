#!/bin/bash

echo "==> Setting up Vim..."

# Create a backup of current Vim settings
mkdir -p /tmp/vim_backup

if [[ -d "$HOME/.vim" ]]; then
  cp -r $HOME/.vim /tmp/vim_backup
fi

if [[ -f "$HOME/.vimrc" ]]; then
  cp $HOME/.vimrc /tmp/vim_backup
fi

has_brew=`which brew`
cwd=`pwd`

if [[ -n $has_brew ]]; then
  echo -n "==> Looking for Vim updates..."
  brew upgrade vim &> /dev/null
  echo -en "\r==> Vim was successfully updated\n"
else
  echo "==> Homebrew not found, skipped Vim update"
fi

cp -r $cwd/vim $HOME/.vim
cp $cwd/vimrc $HOME/.vimrc

if [[ ! -d "$HOME/.vim/bundle/Vundle.vim" ]]; then
  echo -n "==> Downloading Vundle..."
  git clone https://github.com/VundleVim/Vundle.vim.git "$HOME/.vim/bundle/Vundle.vim" &> /dev/null
  echo -en "\r==> Vundle was successfully downloaded\n"
fi

echo -n "==> Installing Vundle plugins..."
vim +PluginInstall +qall &> /dev/null
echo -en "\r==> Vundle plugins were successfully installed\n"

# Default theme is solarized
theme_default="solarized"

# Read color scheme from the user
echo -e "==> Color scheme name ($theme_default): \c"
read theme

if [[ -z $theme ]]; then
  theme=$theme_default
fi

# Update `.vimrc` with color scheme
cat $cwd/vimrc | sed -e "s/\"{{colorscheme}}/colorscheme $theme/" > "$HOME/.vimrc"

echo "==> Done! Your Vim is ready to go."
exit 0
